<?xml version="1.0" encoding="UTF-8" ?>
<xsl:stylesheet version="1.0" xmlns:oraxsl="http://www.oracle.com/XSL/Transform/java"
                xmlns:DVMFunctions="http://www.oracle.com/XSL/Transform/java/com.bea.wli.sb.functions.dvm.DVMFunctions"
                xmlns:ns0="http://xmlns.oracle.com/pcbpel/adapter/db/GetPaymentsDetailsBS"
                xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                xmlns:BasicCredentialsUserFunction="http://www.oracle.com/XSL/Transform/java/com.bea.wli.sb.stages.functions.BasicCredentialsUserFunction"
                xmlns:oracle-xsl-mapper="http://www.oracle.com/xsl/mapper/schemas"
                xmlns:UUIDUserFunction="http://www.oracle.com/XSL/Transform/java/com.bea.wli.sb.stages.functions.UUIDUserFunction"
                xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:tns="http://www.getPaymentsDetails.org"
                xmlns:xsd="http://www.w3.org/2001/XMLSchema"
                xmlns:IsUserInRoleFunction="http://www.oracle.com/XSL/Transform/java/com.bea.wli.sb.stages.functions.IsUserInRoleFunction"
                xmlns:IsUserInGroupFunction="http://www.oracle.com/XSL/Transform/java/com.bea.wli.sb.stages.functions.IsUserInGroupFunction"
                xmlns:XrefFunctions="http://www.oracle.com/XSL/Transform/java/com.bea.wli.sb.functions.xref.XrefFunctions"
                exclude-result-prefixes="xsi oracle-xsl-mapper xsl xsd ns0 tns oraxsl DVMFunctions BasicCredentialsUserFunction UUIDUserFunction IsUserInRoleFunction IsUserInGroupFunction XrefFunctions">
  <oracle-xsl-mapper:schema>
    <!--SPECIFICATION OF MAP SOURCES AND TARGETS, DO NOT MODIFY.-->
    <oracle-xsl-mapper:mapSources>
      <oracle-xsl-mapper:source type="XSD">
        <oracle-xsl-mapper:schema location="../Resources/GetPaymentsDetailsBS.xsd"/>
        <oracle-xsl-mapper:rootElement name="GetPaymentsDetailsBSOutputCollection"
                                       namespace="http://xmlns.oracle.com/pcbpel/adapter/db/GetPaymentsDetailsBS"/>
      </oracle-xsl-mapper:source>
    </oracle-xsl-mapper:mapSources>
    <oracle-xsl-mapper:mapTargets>
      <oracle-xsl-mapper:target type="XSD">
        <oracle-xsl-mapper:schema location="../Schema/SD_getPaymentsDetails.xsd"/>
        <oracle-xsl-mapper:rootElement name="GetPaymentsDetails_OutputCollection"
                                       namespace="http://www.getPaymentsDetails.org"/>
      </oracle-xsl-mapper:target>
    </oracle-xsl-mapper:mapTargets>
    <!--GENERATED BY ORACLE XSL MAPPER 12.1.3.0.0(XSLT Build 140529.0700.0211) AT [TUE JUN 09 16:48:46 IST 2015].-->
  </oracle-xsl-mapper:schema>
  <!--User Editing allowed BELOW this line - DO NOT DELETE THIS LINE-->
  <xsl:template match="/">
    <tns:GetPaymentsDetails_OutputCollection>
      <xsl:for-each select="/ns0:GetPaymentsDetailsBSOutputCollection/ns0:GetPaymentsDetailsBSOutput">
        <tns:GetPaymentsDetailsOutput>
          <tns:erpSystemId>
            <xsl:value-of select="string (ns0:ERPSYSTEMID )"/>
          </tns:erpSystemId>
          <tns:sellerCode>
            <xsl:value-of select="ns0:SELLERCODE"/>
          </tns:sellerCode>
          <tns:amount>
            <xsl:value-of select="string (ns0:AMOUNT )"/>
          </tns:amount>
          <tns:paymentMode>
            <xsl:value-of select="ns0:PAYMENTMODE"/>
          </tns:paymentMode>
          <tns:paymentDate>
            <xsl:value-of select="ns0:PAYMENTDATE"/>
          </tns:paymentDate>
          <tns:paymentId>
            <xsl:value-of select="string (ns0:PAYMENTID )"/>
          </tns:paymentId>
          <tns:completed>
            <xsl:value-of select="boolean (ns0:COMPLETED )"/>
          </tns:completed>
          <tns:transactionType>
            <xsl:value-of select="ns0:TRANSACTIONTYPE"/>
          </tns:transactionType>
          <tns:transactionCount>
            <xsl:value-of select="string (ns0:TRANSACTIONCOUNT )"/>
          </tns:transactionCount>
          <tns:created>
            <xsl:value-of select="ns0:CREATION_DATE"/>
          </tns:created>
          <tns:updated>
            <xsl:value-of select="ns0:LAST_UPDATE_DATE"/>
          </tns:updated>
          <tns:requestId>
            <xsl:value-of select="string (ns0:REQUEST_ID )"/>
          </tns:requestId>
        </tns:GetPaymentsDetailsOutput>
      </xsl:for-each>
    </tns:GetPaymentsDetails_OutputCollection>
  </xsl:template>
</xsl:stylesheet>
